[{"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\index.js":"1","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\App.js":"2","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\reportWebVitals.js":"3","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Register.js":"4","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpCreate.js":"5","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Home.js":"6","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Emp.js":"7","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Login.js":"8","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpDetails.js":"9","C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpEdit.js":"10","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\index.js":"11","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\reportWebVitals.js":"12","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\App.js":"13","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Home.js":"14","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Emp.js":"15","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Register.js":"16","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpDetails.js":"17","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Login.js":"18","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpCreate.js":"19","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpEdit.js":"20","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Initial.js":"21"},{"size":664,"mtime":1674223169249,"results":"22","hashOfConfig":"23"},{"size":1066,"mtime":1674223169245,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1674223169249,"results":"25","hashOfConfig":"23"},{"size":6920,"mtime":1674223169248,"results":"26","hashOfConfig":"23"},{"size":4532,"mtime":1674223169247,"results":"27","hashOfConfig":"23"},{"size":657,"mtime":1674223169248,"results":"28","hashOfConfig":"23"},{"size":3103,"mtime":1674223169246,"results":"29","hashOfConfig":"23"},{"size":2687,"mtime":1674223169248,"results":"30","hashOfConfig":"23"},{"size":1551,"mtime":1674223169247,"results":"31","hashOfConfig":"23"},{"size":4873,"mtime":1674223169247,"results":"32","hashOfConfig":"23"},{"size":646,"mtime":1674645403639,"results":"33","hashOfConfig":"34"},{"size":364,"mtime":1674645403701,"results":"35","hashOfConfig":"34"},{"size":1661,"mtime":1674645628887,"results":"36","hashOfConfig":"34"},{"size":726,"mtime":1677148772186,"results":"37","hashOfConfig":"34"},{"size":3207,"mtime":1674645403529,"results":"38","hashOfConfig":"34"},{"size":7070,"mtime":1675080425728,"results":"39","hashOfConfig":"34"},{"size":1582,"mtime":1674645403574,"results":"40","hashOfConfig":"34"},{"size":3116,"mtime":1677835713252,"results":"41","hashOfConfig":"34"},{"size":5185,"mtime":1675080547905,"results":"42","hashOfConfig":"34"},{"size":5698,"mtime":1675769329586,"results":"43","hashOfConfig":"34"},{"size":268,"mtime":1677073432253,"results":"44","hashOfConfig":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hg5zwn",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"3na7t",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\index.js",[],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\App.js",[],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\reportWebVitals.js",[],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Register.js",[],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpCreate.js",["115","116"],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Home.js",["117"],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Emp.js",["118","119","120"],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\Login.js",[],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpDetails.js",["121"],[],"C:\\Users\\saideepm\\Desktop\\git\\crudjson\\src\\EmpEdit.js",["122","123"],[],"C:\\Users\\saideepm\\Desktop\\crudjson\\src\\index.js",[],[],[],"C:\\Users\\saideepm\\Desktop\\crudjson\\src\\reportWebVitals.js",[],[],"C:\\Users\\saideepm\\Desktop\\crudjson\\src\\App.js",["124"],[],"import './App.css'\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\n\nimport { ToastContainer } from 'react-toastify';\nimport Home from './Home';\nimport Register from './Register';\nimport Login from './Login';\nimport Emp from './Emp';\nimport EmpCreate from './EmpCreate';\nimport EmpDetail from './EmpDetails';\nimport EmpEdit from './EmpEdit';\n\nfunction App() {\n  const loggedIn = window.localStorage.getItem('isLoggedin');\n  console.log(loggedIn, 'login');\n  return (\n    <div className=\"App\">\n      <ToastContainer theme=\"colored\" position=\"top-center\"></ToastContainer>\n      <BrowserRouter>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={loggedIn ? <Home /> : <Navigate replace to={'/login'} />}\n          ></Route>\n          <Route path=\"/login\" element={<Login />}></Route>\n          <Route path=\"/register\" element={<Register />}></Route>\n          <Route\n            path=\"/employee\"\n            element={loggedIn ? <Emp /> : <Navigate replace to={'/login'} />}\n          ></Route>\n          <Route\n            path=\"/create\"\n            element={\n              loggedIn ? <EmpCreate /> : <Navigate replace to={'/login'} />\n            }\n          ></Route>\n          <Route\n            path=\"/detail/:empid\"\n            element={\n              loggedIn ? <EmpDetail /> : <Navigate replace to={'/login'} />\n            }\n          ></Route>\n          <Route\n            path=\"/edit/:empid\"\n            element={\n              loggedIn ? <EmpEdit /> : <Navigate replace to={'/login'} />\n            }\n          ></Route>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Home.js",["125"],[],"import React, { useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nexport default function Home() {\n  const usenavigate = useNavigate();\n  useEffect(() => {\n    let username = window.localStorage.getItem('username');\n    if (username === '' || username === null) {\n      window.localStorage.removeItem('isLoggedin');\n      usenavigate('/login');\n    }\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <Link to={'/'}>Home</Link>\n        <Link to={'/employee'} className=\"pad\">\n          Employee data\n        </Link>\n        <Link style={{ float: 'right' }} to={'/login'}>\n          Logout\n        </Link>\n      </div>\n      <h1>welcome to home page!!!</h1>\n    </div>\n  );\n}","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Emp.js",["126","127","128","129"],[],"import { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Emp = () => {\n  const [empdata, empdatachange] = useState(null);\n  const navigate = useNavigate();\n\n  const LoadDetail = (id) => {\n    navigate('/detail/' + id);\n  };\n  const LoadEdit = (id) => {\n    navigate('/edit/' + id);\n  };\n  const Removefunction = (id) => {\n    if (window.confirm('Do you want to remove?')) {\n      fetch('http://localhost:5000/employee/' + id, {\n        method: 'DELETE',\n      })\n        .then((res) => {\n          alert('Removed successfully.');\n          window.location.reload();\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:5000/employee')\n      .then((res) => {\n        return res.json();\n      })\n      .then((resp) => {\n        empdatachange(resp);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n    let username = window.localStorage.getItem('username');\n    if (username === '' || username === null) {\n      navigate('/login');\n    }\n  }, []);\n  return (\n    <div className=\"container\">\n      <div className=\"card m-3\">\n        <div className=\"card-title text-center\">\n          <h2>Employee Listing</h2>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"divbtn\">\n            <Link to=\"/create\" className=\"btn btn-success\">\n              Add New (+)\n            </Link>\n            <Link to=\"/\" className=\"btn m-2 btn-danger\">\n              Back\n            </Link>\n          </div>\n          <table className=\"table table-bordered\">\n            <thead className=\"bg-dark text-white\">\n              <tr>\n                <td>ID</td>\n                <td>Name</td>\n                <td>Email</td>\n                <td>Phone</td>\n                <td>Action</td>\n              </tr>\n            </thead>\n            <tbody>\n              {empdata &&\n                empdata.map((item) => (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>{item.name}</td>\n                    <td>{item.email}</td>\n                    <td>{item.phone}</td>\n                    <td>\n                      <a\n                        onClick={() => {\n                          LoadEdit(item.id);\n                        }}\n                        className=\"btn btn-success\"\n                      >\n                        Edit\n                      </a>\n                      <a\n                        onClick={() => {\n                          Removefunction(item.id);\n                        }}\n                        className=\"btn btn-danger\"\n                      >\n                        Remove\n                      </a>\n                      <a\n                        onClick={() => {\n                          LoadDetail(item.id);\n                        }}\n                        className=\"btn btn-primary\"\n                      >\n                        Details\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Emp;\n","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Register.js",[],[],"C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpDetails.js",["130"],[],"import { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\n\nconst EmpDetail = () => {\n  const { empid } = useParams();\n\n  const [empdata, empdatachange] = useState({});\n  const usenavigate = useNavigate();\n\n  useEffect(() => {\n    fetch('http://localhost:5000/employee/' + empid)\n      .then((res) => {\n        return res.json();\n      })\n      .then((resp) => {\n        empdatachange(resp);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n    let username = window.localStorage.getItem('username');\n    if (username === '' || username === null) {\n      usenavigate('/login');\n    }\n  }, []);\n  return (\n    <div>\n      {/* <div className=\"row\">\n                <div className=\"offset-lg-3 col-lg-6\"> */}\n\n      <div className=\"container\">\n        <div className=\"card row\" style={{ textAlign: 'left' }}>\n          <div className=\"card-title\">\n            <h2>Employee Create</h2>\n          </div>\n          <div className=\"card-body\"></div>\n\n          {empdata && (\n            <div>\n              <h2>\n                The Employee name is : <b>{empdata.name}</b> ({empdata.id})\n              </h2>\n              <h3>Contact Details</h3>\n              <h5>Email is : {empdata.email}</h5>\n              <h5>Phone is : {empdata.phone}</h5>\n              <Link className=\"btn btn-danger\" to=\"/employee\">\n                Back to Listing\n              </Link>\n            </div>\n          )}\n        </div>\n      </div>\n      {/* </div>\n            </div> */}\n    </div>\n  );\n};\n\nexport default EmpDetail;\n","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Login.js",[],[],"C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpCreate.js",["131","132","133"],[],"import { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst EmpCreate = () => {\n  const [id, idchange] = useState('');\n  const [name, namechange] = useState('');\n  const [email, emailchange] = useState('');\n  const [phone, phonechange] = useState('');\n  const [active, activechange] = useState(true);\n  const [validation, valchange] = useState(false);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    let username = window.localStorage.getItem('username');\n    if (username === '' || username === null) {\n      navigate('/login');\n    }\n  }, []);\n  const Isvalidate = () => {\n    let isproceed = true;\n    let errormessage = 'Please fill the details : ';\n    \n    if (name === null || name === '') {\n      isproceed = false;\n      errormessage += 'fullname ';\n    }\n    if (email === null || email === '') {\n      isproceed = false;\n      errormessage += 'email ';\n    }\n    if (phone === null || phone=== '') {\n      isproceed = false;\n      errormessage += 'Phone number ';\n    }\n    \n    if (!isproceed) {\n      toast.warning(errormessage);\n    } else {\n      if (/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) {\n      } else {\n        isproceed = false;\n        toast.warning('Please enter the valid email');\n      }\n    }\n    return isproceed;\n  };                  \n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const empdata = { name, email, phone, active };\n    if (Isvalidate()){\n      fetch('http://localhost:5000/employee', {\n      method: 'POST',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(empdata),\n    })\n      .then((res) => {\n        alert('Saved successfully.');\n        navigate('/employee');\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n\n    }\n\n    \n  };\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"offset-lg-3 col-lg-6\">\n          <form className=\"container\" onSubmit={handlesubmit}>\n            <div className=\"card\" style={{ textAlign: 'left' }}>\n              <div className=\"card-title\">\n                <h2>Employee Create</h2>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>ID</label>\n                      <input\n                        value={id}\n                        disabled=\"disabled\"\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        required\n                        value={name}\n                        onMouseDown={(e) => valchange(true)}\n                        onChange={(e) => namechange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                      {name.length == 0 && validation && (\n                        <span className=\"text-danger\">Enter the name</span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        value={email}\n                        onChange={(e) => emailchange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Phone</label>\n                      <input\n                        value={phone}\n                        onChange={(e) => phonechange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-check\">\n                      <input\n                        checked={active}\n                        onChange={(e) => activechange(e.target.checked)}\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                      ></input>\n                      <label className=\"form-check-label\">Is Active</label>\n                    </div>\n                  </div>\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-success\" type=\"submit\">\n                        Save\n                      </button>\n                      <Link to=\"/employee\" className=\"btn btn-danger\">\n                        Back\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmpCreate;\n","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\EmpEdit.js",["134","135"],[],"import { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst EmpEdit = () => {\n  const { empid } = useParams();\n  const usenavigate = useNavigate();\n\n  //const [empdata, empdatachange] = useState({});\n\n  useEffect(() => {\n    fetch('http://localhost:5000/employee/' + empid)\n      .then((res) => {\n        return res.json();\n      })\n      .then((resp) => {\n        idchange(resp.id);\n        namechange(resp.name);\n        emailchange(resp.email);\n        phonechange(resp.phone);\n        activechange(resp.isactive);\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n    let username = window.localStorage.getItem('username');\n    if (username === '' || username === null) {\n      usenavigate('/login');\n    }\n  }, []);\n\n  const [id, idchange] = useState('');\n  const [name, namechange] = useState('');\n  const [email, emailchange] = useState('');\n  const [phone, phonechange] = useState('');\n  const [active, activechange] = useState(true);\n  const [validation, valchange] = useState(false);\n\n  const navigate = useNavigate();\n  const Isvalidate = () => {\n    let isproceed = true;\n    let errormessage = 'Please fill the details : ';\n    \n    if (name === null || name === '') {\n      isproceed = false;\n      errormessage += 'fullname ';\n    }\n    if (email === null || email === '') {\n      isproceed = false;\n      errormessage += 'email ';\n    }\n    if (phone === null || phone=== '') {\n      isproceed = false;\n      errormessage += 'Phone number ';\n    }\n    \n    if (!isproceed) {\n      toast.warning(errormessage);\n    } else {\n      if (/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)) {\n      } else {\n        isproceed = false;\n        toast.warning('Please enter the valid email');\n      }\n    }\n    return isproceed;\n  };                  \n\n  const handlesubmit = (e) => {\n    e.preventDefault();\n    const empdata = { id, name, email, phone, active };\n    if (Isvalidate()){\n        fetch('http://localhost:5000/employee/' + empid, {\n      method: 'PUT',\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify(empdata),\n    })\n      .then((res) => {\n        alert('Saved successfully.');\n        navigate('/employee');\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n    }\n\n  };\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"offset-lg-3 col-lg-6\">\n          <form className=\"container\" onSubmit={handlesubmit}>\n            <div className=\"card\" style={{ textAlign: 'left' }}>\n              <div className=\"card-title\">\n                <h2>Employee Edit</h2>\n              </div>\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>ID</label>\n                      <input\n                        value={id}\n                        disabled=\"disabled\"\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Name</label>\n                      <input\n                        required\n                        value={name}\n                        onMouseDown={(e) => valchange(true)}\n                        onChange={(e) => namechange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                      {name.length == 0 && validation && (\n                        <span className=\"text-danger\">Enter the name</span>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Email</label>\n                      <input\n                        value={email}\n                        onChange={(e) => emailchange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <label>Phone</label>\n                      <input\n                        value={phone}\n                        onChange={(e) => phonechange(e.target.value)}\n                        className=\"form-control\"\n                      ></input>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-check\">\n                      <input\n                        checked={active}\n                        onChange={(e) => activechange(e.target.checked)}\n                        type=\"checkbox\"\n                        className=\"form-check-input\"\n                      ></input>\n                      <label className=\"form-check-label\">Is Active</label>\n                    </div>\n                  </div>\n                  <div className=\"col-lg-12\">\n                    <div className=\"form-group\">\n                      <button className=\"btn btn-success\" type=\"submit\">\n                        Save\n                      </button>\n                      <Link to=\"/employee\" className=\"btn btn-danger\">\n                        Back\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmpEdit;\n","C:\\Users\\saideepm\\Desktop\\crudjson\\src\\Initial.js",["136","137","138"],[],{"ruleId":"139","severity":1,"message":"140","line":6,"column":14,"nodeType":"141","messageId":"142","endLine":6,"endColumn":22},{"ruleId":"143","severity":1,"message":"144","line":60,"column":53,"nodeType":"145","messageId":"146","endLine":60,"endColumn":55},{"ruleId":"147","severity":1,"message":"148","line":13,"column":6,"nodeType":"149","endLine":13,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":68,"column":45,"nodeType":"153","endLine":68,"endColumn":114},{"ruleId":"151","severity":1,"message":"152","line":69,"column":45,"nodeType":"153","endLine":69,"endColumn":119},{"ruleId":"151","severity":1,"message":"152","line":70,"column":45,"nodeType":"153","endLine":70,"endColumn":116},{"ruleId":"147","severity":1,"message":"154","line":18,"column":8,"nodeType":"149","endLine":18,"endColumn":10,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"154","line":21,"column":8,"nodeType":"149","endLine":21,"endColumn":10,"suggestions":"156"},{"ruleId":"143","severity":1,"message":"144","line":76,"column":49,"nodeType":"145","messageId":"146","endLine":76,"endColumn":51},{"ruleId":"157","severity":1,"message":"158","line":1,"column":19,"nodeType":"159","messageId":"160","endLine":2,"endColumn":1,"fix":"161"},{"ruleId":"147","severity":1,"message":"148","line":12,"column":6,"nodeType":"149","endLine":12,"endColumn":8,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":44,"column":6,"nodeType":"149","endLine":44,"endColumn":8,"suggestions":"164"},{"ruleId":"151","severity":1,"message":"152","line":79,"column":23,"nodeType":"153","endLine":84,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":87,"column":23,"nodeType":"153","endLine":92,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":95,"column":23,"nodeType":"153","endLine":100,"endColumn":24},{"ruleId":"147","severity":1,"message":"165","line":25,"column":6,"nodeType":"149","endLine":25,"endColumn":8,"suggestions":"166"},{"ruleId":"139","severity":1,"message":"140","line":6,"column":14,"nodeType":"141","messageId":"142","endLine":6,"endColumn":22},{"ruleId":"147","severity":1,"message":"163","line":19,"column":6,"nodeType":"149","endLine":19,"endColumn":8,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"144","line":103,"column":36,"nodeType":"145","messageId":"146","endLine":103,"endColumn":38},{"ruleId":"147","severity":1,"message":"165","line":30,"column":6,"nodeType":"149","endLine":30,"endColumn":8,"suggestions":"168"},{"ruleId":"143","severity":1,"message":"144","line":120,"column":36,"nodeType":"145","messageId":"146","endLine":120,"endColumn":38},{"ruleId":"157","severity":1,"message":"158","line":1,"column":26,"nodeType":"159","messageId":"160","endLine":2,"endColumn":1,"fix":"169"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":37,"nodeType":"159","messageId":"160","endLine":3,"endColumn":1,"fix":"170"},{"ruleId":"157","severity":1,"message":"158","line":13,"column":4,"nodeType":"171","messageId":"160","endLine":14,"endColumn":1,"fix":"172"},"no-unused-vars","'idchange' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'usenavigate'. Either include it or remove the dependency array.","ArrayExpression",["173"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'empid'. Either include it or remove the dependency array.",["174"],["175"],"semi","Missing semicolon.","ImportDeclaration","missingSemi",{"range":"176","text":"177"},["178"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'empid' and 'usenavigate'. Either include them or remove the dependency array.",["180"],["181"],["182"],{"range":"183","text":"177"},{"range":"184","text":"177"},"ReturnStatement",{"range":"185","text":"177"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},[18,18],";",{"desc":"186","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"192","fix":"196"},{"desc":"194","fix":"197"},[25,25],[62,62],[265,265],"Update the dependencies array to be: [usenavigate]",{"range":"198","text":"199"},"Update the dependencies array to be: [empid]",{"range":"200","text":"201"},{"range":"202","text":"201"},{"range":"203","text":"199"},"Update the dependencies array to be: [navigate]",{"range":"204","text":"205"},"Update the dependencies array to be: [empid, usenavigate]",{"range":"206","text":"207"},{"range":"208","text":"205"},{"range":"209","text":"207"},[333,335],"[usenavigate]",[501,503],"[empid]",[664,666],[387,389],[1110,1112],"[navigate]",[668,670],"[empid, usenavigate]",[638,640],[840,842]]